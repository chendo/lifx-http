#!/usr/bin/env ruby
$LOAD_PATH << File.join(File.dirname(__FILE__), "..", "lib")
require "lifx-http"
require "rack/cors"
require "lifx-http/method_override"
require "webrick"
require "optparse"
require "mdns"

options = {
  port: 56780,
  bind_address: "0.0.0.0",
  mdns_host: "lifx-http",
  mdns_ip: begin
    Socket.ip_address_list.find { |ip| ip.ipv4_private? }.ip_address
  end
}

OptionParser.new do |parser|
  parser.banner = "Usage: lifx-http [options]"
  parser.version = LIFXHTTP::VERSION
  parser.on("-p PORT", "--port PORT", "Specify the port to run lifx-http on. Defaults to #{options[:port]}") do |port|
    options[:port] = port.to_i
  end
  parser.on("--hostname HOSTNAME", "Specify the host the MDNS broadcast should use. Defaults to #{options[:mdns_host]}") do |host|
    options[:mdns_host] = host
  end
  parser.on("--ip MDNS_IP", "Specify the IP the MDNS record should resolve to. Specify empty \"\" to disable MDNS. Defaults to #{options[:mdns_ip]}") do |ip|
    options[:mdns_ip] = ip
  end
  parser.on("--bind BIND_ADDRESS", "Specify the IP the http server should bind to. Defaults to #{options[:bind_address]}") do |bind|
    options[:bind_address] = bind
  end
  parser.on_tail("-h", "--help", "Show this message") do
    puts parser
    exit
  end
end.parse!

app = Rack::Builder.new do
  use LIFXHTTP::MethodOverride
  use Rack::Cors do
    allow do
      origins '*'
      resource '*', headers: :any, methods: [:get, :post, :put, :delete, :options]
    end
  end

  run LIFXHTTP::API
end

if !options[:mdns_ip].empty?
  MDNS.add_record("#{options[:mdns_host]}.local", 120, options[:mdns_ip])
  MDNS.start
  puts "lifx-http can be reached at http://#{options[:mdns_host]}.local:#{options[:port]}/"
end

Rack::Handler::WEBrick.run(app, Port: options[:port], Host: options[:bind_address])

